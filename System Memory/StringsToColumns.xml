<?xml version="1.0" encoding="Windows-1252" ?>
<?xml-stylesheet type="text/xsl" href="file:///C:\Program Files\MZTools3VBA\sample.xsl" ?>
<File>
<Name>StingsToColumns</Name>
<FileName></FileName>
<PathFileName></PathFileName>
<Type>ClassModule</Type>
<Properties>
<Property>
<Name>Name</Name>
<Value>StingsToColumns</Value>
</Property>
<Property>
<Name>Instancing</Name>
<Value>1</Value>
</Property>
</Properties>
<CodeModule>
<CountOfDeclarationLines>35</CountOfDeclarationLines>
<CountOfLines>101</CountOfLines>
<Interfaces>
</Interfaces>
<Events>
</Events>
<Procedures>
<Procedure>
<Name>tabs</Name>
<Scope></Scope>
<Type>PropertyLet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>3</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Let tabs(w As Variant)</Declaration>
<Parameters>
<Parameter>
<Name>w</Name>
<Type>Variant</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
<Procedure>
<Name>indents</Name>
<Scope></Scope>
<Type>PropertyLet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>3</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Let indents(i As Variant)</Declaration>
<Parameters>
<Parameter>
<Name>i</Name>
<Type>Variant</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
<Procedure>
<Name>setCols</Name>
<Scope>Public</Scope>
<Type>Subroutine</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>5</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Public Sub setCols(ParamArray w())</Declaration>
<Parameters>
<Parameter>
<Name>w()</Name>
<Type></Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>True</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
<Procedure>
<Name>setIndents</Name>
<Scope>Public</Scope>
<Type>Subroutine</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>5</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Public Sub setIndents(ParamArray i())</Declaration>
<Parameters>
<Parameter>
<Name>i()</Name>
<Type></Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>True</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
<Procedure>
<Name>setVarray</Name>
<Scope>Private</Scope>
<Type>Subroutine</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>11</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Private Sub setVarray(UB As Long, pElements As Variant, i As Variant)</Declaration>
<Parameters>
<Parameter>
<Name>UB</Name>
<Type>Long</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>pElements</Name>
<Type>Variant</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>i</Name>
<Type>Variant</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
<Procedure>
<Name>Content</Name>
<Scope></Scope>
<Type>PropertyLet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>16</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Let Content(tabDelimContent As String)</Declaration>
<Parameters>
<Parameter>
<Name>tabDelimContent</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
<Procedure>
<Name>Format</Name>
<Scope>Public</Scope>
<Type>Function</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>19</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Public Function Format(ParamArray Strings()) As String</Declaration>
<Parameters>
<Parameter>
<Name>Strings()</Name>
<Type></Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>True</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType>String</ReturnType>
</Procedure>
<Procedure>
<Name>Class_Initialize</Name>
<Scope>Private</Scope>
<Type>Subroutine</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>4</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Private Sub Class_Initialize()</Declaration>
<Parameters>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
</Procedures>
<CommentLines>
</CommentLines>
</CodeModule>
</File>
