<?xml version="1.0" encoding="Windows-1252" ?>
<?xml-stylesheet type="text/xsl" href="file:///C:\Program Files\MZTools3VBA\sample.xsl" ?>
<File>
<Name>cldefReferrence</Name>
<FileName></FileName>
<PathFileName></PathFileName>
<Type>ClassModule</Type>
<Properties>
<Property>
<Name>Name</Name>
<Value>cldefReferrence</Value>
</Property>
<Property>
<Name>Instancing</Name>
<Value>1</Value>
</Property>
</Properties>
<CodeModule>
<CountOfDeclarationLines>25</CountOfDeclarationLines>
<CountOfLines>132</CountOfLines>
<Interfaces>
</Interfaces>
<Events>
</Events>
<Procedures>
<Procedure>
<Name>passPointers</Name>
<Scope>Public</Scope>
<Type>Subroutine</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>15</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Public Sub passPointers(obj As Variant, pVar As LongPtr, pObj As LongPtr, byteCount As Long)</Declaration>
<Parameters>
<Parameter>
<Name>obj</Name>
<Type>Variant</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>pVar</Name>
<Type>LongPtr</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>pObj</Name>
<Type>LongPtr</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>byteCount</Name>
<Type>Long</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
<Procedure>
<Name>initObject</Name>
<Scope>Public</Scope>
<Type>Subroutine</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>28</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Public Sub initObject(ByVal byteCount As Long, ByRef obj As Variant)</Declaration>
<Parameters>
<Parameter>
<Name>byteCount</Name>
<Type>Long</Type>
<IsByVal>True</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>obj</Name>
<Type>Variant</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
<Procedure>
<Name>Object</Name>
<Scope></Scope>
<Type>PropertyLet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>8</CountOfLines>
<CommentLines>
<CommentLine>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</CommentLine>
<CommentLine>Default value: Edit in Notepad to see this.</CommentLine>
<CommentLine>Attribute Object.VB_UserMemId = 0</CommentLine>
</CommentLines>
<Declaration>Property Let Object(ByRef obj As Variant, ByVal byteCount As Long)</Declaration>
<Parameters>
<Parameter>
<Name>obj</Name>
<Type>Variant</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>byteCount</Name>
<Type>Long</Type>
<IsByVal>True</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
<Procedure>
<Name>VarClass</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>3</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get VarClass() As String</Declaration>
<Parameters>
</Parameters>
<ReturnType>String</ReturnType>
</Procedure>
<Procedure>
<Name>Address</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>3</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get Address() As LongPtr</Declaration>
<Parameters>
</Parameters>
<ReturnType>LongPtr</ReturnType>
</Procedure>
<Procedure>
<Name>AddressX</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>3</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get AddressX() As String</Declaration>
<Parameters>
</Parameters>
<ReturnType>String</ReturnType>
</Procedure>
<Procedure>
<Name>refAddress</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>3</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get refAddress() As LongPtr</Declaration>
<Parameters>
</Parameters>
<ReturnType>LongPtr</ReturnType>
</Procedure>
<Procedure>
<Name>byteCount</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>3</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get byteCount() As Long</Declaration>
<Parameters>
</Parameters>
<ReturnType>Long</ReturnType>
</Procedure>
<Procedure>
<Name>ContentsX</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>4</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get ContentsX(Optional byteCount As Variant) As String</Declaration>
<Parameters>
<Parameter>
<Name>byteCount</Name>
<Type>Variant</Type>
<IsByVal>False</IsByVal>
<IsOptional>True</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType>String</ReturnType>
</Procedure>
<Procedure>
<Name>pAddress</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>8</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get pAddress() As LongPtr</Declaration>
<Parameters>
</Parameters>
<ReturnType>LongPtr</ReturnType>
</Procedure>
<Procedure>
<Name>pAddressX</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>8</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get pAddressX() As String</Declaration>
<Parameters>
</Parameters>
<ReturnType>String</ReturnType>
</Procedure>
<Procedure>
<Name>pContentsX</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>9</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get pContentsX(Optional byteCount As Variant) As String</Declaration>
<Parameters>
<Parameter>
<Name>byteCount</Name>
<Type>Variant</Type>
<IsByVal>False</IsByVal>
<IsOptional>True</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType>String</ReturnType>
</Procedure>
<Procedure>
<Name>sClass</Name>
<Scope>Private</Scope>
<Type>Function</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>8</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Private Function sClass(vc As VarClass) As String</Declaration>
<Parameters>
<Parameter>
<Name>vc</Name>
<Type>VarClass</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType>String</ReturnType>
</Procedure>
<Procedure>
<Name>Class_Initialize</Name>
<Scope>Private</Scope>
<Type>Subroutine</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>4</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Private Sub Class_Initialize()</Declaration>
<Parameters>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
</Procedures>
<CommentLines>
</CommentLines>
</CodeModule>
</File>
