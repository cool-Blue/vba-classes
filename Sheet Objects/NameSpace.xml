<?xml version="1.0" encoding="Windows-1252" ?>
<?xml-stylesheet type="text/xsl" href="file:///C:\Program Files\MZTools3VBA\sample.xsl" ?>
<File>
<Name>SheetObjects_NameSpace</Name>
<FileName></FileName>
<PathFileName></PathFileName>
<Type>ClassModule</Type>
<Properties>
<Property>
<Name>Name</Name>
<Value>SheetObjects_NameSpace</Value>
</Property>
<Property>
<Name>Instancing</Name>
<Value>1</Value>
</Property>
</Properties>
<CodeModule>
<CountOfDeclarationLines>8</CountOfDeclarationLines>
<CountOfLines>141</CountOfLines>
<Interfaces>
</Interfaces>
<Events>
</Events>
<Procedures>
<Procedure>
<Name>nameSpace</Name>
<Scope>Public</Scope>
<Type>Subroutine</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>5</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Public Sub nameSpace(wks As Worksheet, spaceType As String, Name As String)</Declaration>
<Parameters>
<Parameter>
<Name>wks</Name>
<Type>Worksheet</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>spaceType</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>Name</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
<Procedure>
<Name>addVariableUnTyped</Name>
<Scope>Public</Scope>
<Type>Function</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>18</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Public Function addVariableUnTyped(varName As String) As Boolean</Declaration>
<Parameters>
<Parameter>
<Name>varName</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType>Boolean</ReturnType>
</Procedure>
<Procedure>
<Name>addVariableTyped</Name>
<Scope>Public</Scope>
<Type>Function</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>17</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Public Function addVariableTyped(varName As String, varType As String) As Boolean</Declaration>
<Parameters>
<Parameter>
<Name>varName</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>varType</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType>Boolean</ReturnType>
</Procedure>
<Procedure>
<Name>createVariable</Name>
<Scope>Private</Scope>
<Type>Function</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>18</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Private Function createVariable(varName As String, Optional varType As String = &quot;&quot;) As SheetObjects_Variable</Declaration>
<Parameters>
<Parameter>
<Name>varName</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>varType</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>True</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue>&quot;&quot;</DefaultValue>
</Parameter>
</Parameters>
<ReturnType>SheetObjects_Variable</ReturnType>
</Procedure>
<Procedure>
<Name>Variable</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>12</CountOfLines>
<CommentLines>
<CommentLine>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</CommentLine>
<CommentLine>Default value: Edit in Notepad to see this.</CommentLine>
<CommentLine>Attribute Variable.VB_UserMemId = 0</CommentLine>
</CommentLines>
<Declaration>Property Get Variable(varName As String) As SheetObjects_Variable</Declaration>
<Parameters>
<Parameter>
<Name>varName</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType>SheetObjects_Variable</ReturnType>
</Procedure>
<Procedure>
<Name>Name</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>3</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get Name() As String</Declaration>
<Parameters>
</Parameters>
<ReturnType>String</ReturnType>
</Procedure>
<Procedure>
<Name>SpaceRange</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>5</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get SpaceRange() As Range</Declaration>
<Parameters>
</Parameters>
<ReturnType>Range</ReturnType>
</Procedure>
<Procedure>
<Name>Header</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>5</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get Header() As Range</Declaration>
<Parameters>
</Parameters>
<ReturnType>Range</ReturnType>
</Procedure>
<Procedure>
<Name>getSpaceRange</Name>
<Scope>Private</Scope>
<Type>Function</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>9</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Private Function getSpaceRange(spaceType As String, Name As String) As Range</Declaration>
<Parameters>
<Parameter>
<Name>spaceType</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>Name</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType>Range</ReturnType>
</Procedure>
<Procedure>
<Name>getHeaderRange</Name>
<Scope>Private</Scope>
<Type>Function</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>13</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Private Function getHeaderRange(wks As Worksheet, spaceType As String, Name As String) As Range</Declaration>
<Parameters>
<Parameter>
<Name>wks</Name>
<Type>Worksheet</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>spaceType</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>Name</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType>Range</ReturnType>
</Procedure>
<Procedure>
<Name>varNameRange</Name>
<Scope></Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>4</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Property Get varNameRange(varName As String) As Range</Declaration>
<Parameters>
<Parameter>
<Name>varName</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType>Range</ReturnType>
</Procedure>
<Procedure>
<Name>isIncluded</Name>
<Scope>Private</Scope>
<Type>Function</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>7</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Private Function isIncluded(col As Variant, key As String) As Boolean</Declaration>
<Parameters>
<Parameter>
<Name>col</Name>
<Type>Variant</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
<Parameter>
<Name>key</Name>
<Type>String</Type>
<IsByVal>False</IsByVal>
<IsOptional>False</IsOptional>
<IsParamArray>False</IsParamArray>
<DefaultValue></DefaultValue>
</Parameter>
</Parameters>
<ReturnType>Boolean</ReturnType>
</Procedure>
<Procedure>
<Name>Class_Initialize</Name>
<Scope>Private</Scope>
<Type>Subroutine</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>4</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Private Sub Class_Initialize()</Declaration>
<Parameters>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
<Procedure>
<Name>Class_Terminate</Name>
<Scope>Private</Scope>
<Type>Subroutine</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>5</CountOfLines>
<CommentLines>
</CommentLines>
<Declaration>Private Sub Class_Terminate()</Declaration>
<Parameters>
</Parameters>
<ReturnType></ReturnType>
</Procedure>
<Procedure>
<Name>NewEnum</Name>
<Scope>Public</Scope>
<Type>PropertyGet</Type>
<CountOfDeclarationLines>1</CountOfDeclarationLines>
<CountOfLines>7</CountOfLines>
<CommentLines>
<CommentLine>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</CommentLine>
<CommentLine>Enumerator: Edit in Notepad to see this.</CommentLine>
<CommentLine>    Attribute NewEnum.VB_UserMemId = -4</CommentLine>
<CommentLine>    Attribute NewEnum.VB_MemberFlags = &quot;40&quot;</CommentLine>
</CommentLines>
<Declaration>Public Property Get NewEnum() As IUnknown</Declaration>
<Parameters>
</Parameters>
<ReturnType>IUnknown</ReturnType>
</Procedure>
</Procedures>
<CommentLines>
</CommentLines>
</CodeModule>
</File>
